summarise(qt = sum(qtde)) %>%
arrange(ano) %>%
ggplot(aes(x = ano, y = qt)) +
geom_line(color = 'red') +
geom_point(color = 'red') +
geom_text(aes(label = qt),
vjust = -1,
size = 3.2,
color = 'black') +
labs(title = paste('UF - ', x , ' | Quantidade de Casamento Heteroafetivo por ano'),
x = 'Ano',
y= 'Quantidade')
return(dado)
}
for (i in sort(unique(dataset$uf))) {
print(gerar_uf_anual(i))
input <- readline('Digite 1 para continuar ou 0 para parar: ')
ifelse(input == 1L, next(), break())
}
modelo <- lm(qtde ~ ano, data = dataset)
library(magrittr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tibble)
dataset <- read.csv(file.choose()) %>%
as.tibble()
dataset$X <- NULL
dataset$campo_data <- as.Date(dataset$campo_data)
dataset$cidade <- as.character(dataset$cidade)
dataset$cartorio <- as.character(dataset$cartorio)
dataset$num_cnj <- as.character(dataset$num_cnj)
dataset <- dataset %>%
mutate(ano = as.integer(lubridate::year(campo_data)),
mes = as.integer(lubridate::month(campo_data)),
dia = as.integer(lubridate::day(campo_data)))
modelo <- lm(qtde ~ ano, data = dataset)
predict(modelo, data.frame(ano = 2020))
modelo
predict(modelo, data.frame(ano = 2020))
predict(modelo, data.frame(ano = 2019))
dataset %>% filter(ano == 2018L) %>% summarise(qt = sum(qtde))
predict(modelo, data.frame(ano = 2016))
str(dataset)
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde))
str(dataset)
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde))
str(dataset)
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = genero, y = qt)) +
geom_bar(stat = 'identity', fill = 'blue')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = genero, y = qt)) +
geom_bar(stat = 'identity', fill = 'deepblue')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = genero, y = qt)) +
geom_bar(stat = 'identity', fill = 'red')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
scale_x_continuous(name = 'Gênero') +
scale_y_continuous(name = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
scale_x_continuous(name = 'Gênero')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
scale_x_continuous(labels = 'Gênero')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
str(dataset)
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde))
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt, fill = sexo_alt_sobrenome)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt, group = sexo_alt_sobrenome)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde))
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt, fill = sexo_alt_sobrenome)) +
geom_bar(stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(aes(fill = sexo_alt_sobrenome), stat = 'identity', fill = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino') , y = qt)) +
geom_bar(aes(fill = sexo_alt_sobrenome))
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'))) +
geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'))) +
geom_bar(aes(fill = sexo_alt_sobrenome, y = qt)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'))) +
geom_bar(aes(fill = qt)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'))) +
geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(y = qt)) +
geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
# geom_bar(aes(fill = sexo_alt_sobrenome)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(stat = 'identity', color = 'red') +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero, sexo_alt_sobrenome) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(stat = 'identity', color = 'red', position = position_stack(reverse = TRUE)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(stat = 'identity', color = 'red', position = position_stack(reverse = TRUE)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(stat = 'identity', colour = 'red', position = position_stack(reverse = TRUE)) +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
dataset %>%
filter(tipo == 'Homoafetivo') %>%
filter(ano >= 2013L) %>%
filter(mes >= 5L) %>%
filter(dia >= 14L) %>%
group_by(genero) %>%
summarise(qt = sum(qtde)) %>%
ggplot(aes(x = ifelse(genero == 'M', 'Masculino', 'Feminino'), y = qt)) +
geom_bar(stat = 'identity', colour = 'red', position = position_stack(reverse = TRUE)) +
coord_flip() +
labs(title = 'Casamento Homoafetivo por gênero',
x = 'Gênero',
y = 'Quantidade')
str(dataset)
library(shiny)
library(e1071)
library(shiny)
library(e1071)
# Realiza a chamada do modelo
modelo <- readRDS(file = "./RDS/naiveBayesCarros.rds")
# Alimenta os combos
carros <- read.csv(file = "car.data", sep = ",")
buying <- sort(unique(carros$buying))
maint <- sort(unique(carros$maint))
doors <- sort(unique(carros$doors))
persons <- sort(unique(carros$persons))
lug_boot <- sort(unique(carros$lug_boot))
safety <- sort(unique(carros$safety))
ui <- fluidPage(
titlePanel("Previsão de Qualdiade de Veículos"),
fluidRow(
column(4, selectInput(inputId = "buying", label = "Preço:", choices = buying)),
column(4, selectInput(inputId = "maint", label = "Manutenção: ", choices = maint)),
column(4, selectInput(inputId = "doors", label = "Portas:", choices = doors))
),
fluidRow(
column(4, selectInput(inputId = "persons", label = "Capacidade de Passageiros", choices = persons)),
column(4, selectInput(inputId = "lug_boot", label = "Porta Malas", choices = lug_boot)),
column(4, selectInput(inputId = "safety", label = "Segurança", choices = safety))
),
fluidRow(
column(12,
actionButton(inputId = "Processar", label = "Processar"),
h1(textOutput(outputId = "Resultado"))
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp('/media/murilo/Dados/4-Udemy/2-Bootcamp-CientistaDeDados-R/3-PrevendoQualdiadeDeVeiculos/2-App/Carros')
runApp('/media/murilo/Dados/4-Udemy/2-Bootcamp-CientistaDeDados-R/3-PrevendoQualdiadeDeVeiculos/2-App/Carros')
runApp('/media/murilo/Dados/4-Udemy/2-Bootcamp-CientistaDeDados-R/3-PrevendoQualdiadeDeVeiculos/2-App/Carros')
modelo <- readRDS(file = "./RDS/naiveBayesCarros.rds")
# Alimenta os combos
carros <- read.csv(file = "car.data", sep = ",")
buying <- sort(unique(carros$buying))
maint <- sort(unique(carros$maint))
doors <- sort(unique(carros$doors))
persons <- sort(unique(carros$persons))
lug_boot <- sort(unique(carros$lug_boot))
safety <- sort(unique(carros$safety))
carros <- read.csv(file = "car.data", sep = ",")
setwd("/media/murilo/Dados/4-Udemy/2-Bootcamp-CientistaDeDados-R/3-PrevendoQualdiadeDeVeiculos/2-App/Carros")
runApp()
modelo <- readRDS(file = "./RDS/naiveBayesCarros.rds")
# Alimenta os combos
carros <- read.csv(file = "car.data", sep = ",")
buying <- sort(unique(carros$buying))
maint <- sort(unique(carros$maint))
doors <- sort(unique(carros$doors))
persons <- sort(unique(carros$persons))
lug_boot <- sort(unique(carros$lug_boot))
safety <- sort(unique(carros$safety))
runApp()
runApp()
]
unique(carros$class)
classificacao <- function(x) {
if (x == "unacc")
y <- "Não aceitável"
else if (x == "good")
y <- "Bom"
else if (x == "acc")
y <- "Aceitável"
else
y <- "Muito bom"
}
classificacao <- function(x) {
if (x == "unacc")
y <- "Não aceitável"
else if (x == "good")
y <- "Bom"
else if (x == "acc")
y <- "Aceitável"
else
y <- "Muito bom"
return(y)
}
classificacao <- function(x) {
x <- as.character(x)
if (x == "unacc")
y <- "Não aceitável"
else if (x == "good")
y <- "Bom"
else if (x == "acc")
y <- "Aceitável"
else
y <- "Muito bom"
return(y)
}
runApp()
runApp()
runApp()
runApp()
